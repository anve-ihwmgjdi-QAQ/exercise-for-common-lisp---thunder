(defun
    make-mines(high
	       width
	       mines)(setq
		      *mines-array*(make-array(list
					       high
					       width)))(let(([high](1-
								    high))([width](1-
										   width)))(labels((make-mines-iter(mines-len)(let((rand-h(random
																	   [high]))(rand-w(random
																			   [width])))(cond((<=
																					    mines-len
																					    0))((not(minesp
																						     rand-h
																						     rand-w))(setf(aref
																								   *mines-array*
																								   rand-h
																								   rand-w)'*)(make-mines-iter(1-
																											      mines-len)))(t(make-mines-iter
																													     mines-len)))))(minesp(high
																																   width)(eq(aref
																																	     *mines-array*
																																	     high
																																	     width)'*))(need-if-pluse(n
																																				      high-and-width-list)(cond((null
																																								 high-and-width-list)n)((minesp(caar
																																												high-and-width-list)(cadar
																																														     high-and-width-list))(need-if-pluse(1+
																																																			 n)(cdr
																																																			    high-and-width-list)))(t(need-if-pluse
																																																						     n(cdr
																																																						       high-and-width-list)))))(mines-around-number(high
																																																												    width)(need-if-pluse
																																																													   0(remove-if
																																																													     #'(lambda(x)(or(<(car
																																																															       x)0)(<(cadr
																																																																      x)0)(>(car
																																																																	     x)[high])(>(cadr
																																																																			 x)[width])))`((,(1-
																																																																					  high),width)(,(1-
																																																																							 high),(1+
																																																																								width))(,high,(1+
																																																																									       width))(,(1+
																																																																											 high),(1+
																																																																												width))(,(1+
																																																																													  high),width)(,(1+
																																																																															 high),(1-
																																																																																width))(,high,(1-
																																																																																	       width))(,(1-
																																																																																			 high),(1-
																																																																																				width))))))(make-mines-number(high
																																																																																							      width)(cond((>
																																																																																									   high
																																																																																									   [high]))((>
																																																																																										     width
																																																																																										     [width])(make-mines-number(1+
																																																																																														high)0))((minesp
																																																																																															  high
																																																																																															  width)(make-mines-number
																																																																																																 high(1+
																																																																																																      width)))(t(setf(aref
																																																																																																		      *mines-array*
																																																																																																		      high
																																																																																																		      width)(mines-around-number
																																																																																																			     high
																																																																																																			     width))(make-mines-number
																																																																																																				     high(1+
																																																																																																					  width))))))(make-mines-iter
																																																																																																						      mines)(make-mines-number
																																																																																																							     0
																																																																																																							     0))))
